{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
    "4": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "6": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        2947
      ],
      "ERC20": [
        2636
      ],
      "IERC20": [
        2044
      ],
      "IERC20Metadata": [
        2981
      ]
    },
    "id": 2637,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2092,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2093,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2637,
        "sourceUnit": 2045,
        "src": "58:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 2094,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2637,
        "sourceUnit": 2982,
        "src": "81:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 2095,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2637,
        "sourceUnit": 2948,
        "src": "123:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2097,
              "name": "Context",
              "nameLocations": [
                "1349:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2947,
              "src": "1349:7:3"
            },
            "id": 2098,
            "nodeType": "InheritanceSpecifier",
            "src": "1349:7:3"
          },
          {
            "baseName": {
              "id": 2099,
              "name": "IERC20",
              "nameLocations": [
                "1358:6:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2044,
              "src": "1358:6:3"
            },
            "id": 2100,
            "nodeType": "InheritanceSpecifier",
            "src": "1358:6:3"
          },
          {
            "baseName": {
              "id": 2101,
              "name": "IERC20Metadata",
              "nameLocations": [
                "1366:14:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2981,
              "src": "1366:14:3"
            },
            "id": 2102,
            "nodeType": "InheritanceSpecifier",
            "src": "1366:14:3"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2096,
          "nodeType": "StructuredDocumentation",
          "src": "158:1172:3",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 2636,
        "linearizedBaseContracts": [
          2636,
          2981,
          2044,
          2947
        ],
        "name": "ERC20",
        "nameLocation": "1340:5:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2106,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1423:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2636,
            "src": "1387:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2105,
              "keyType": {
                "id": 2103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1395:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1387:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2104,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1406:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2112,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1495:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2636,
            "src": "1439:67:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2111,
              "keyType": {
                "id": 2107,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1447:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1439:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 2110,
                "keyType": {
                  "id": 2108,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1466:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1458:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 2109,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1477:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2114,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1529:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 2636,
            "src": "1513:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2113,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1513:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2116,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1563:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 2636,
            "src": "1548:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2115,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1548:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2118,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1589:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 2636,
            "src": "1574:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2117,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1574:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2134,
              "nodeType": "Block",
              "src": "1962:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2126,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "1972:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2127,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2121,
                      "src": "1980:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1972:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2129,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:13:3"
                },
                {
                  "expression": {
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2130,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2118,
                      "src": "1995:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2131,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "2005:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1995:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2133,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:17:3"
                }
              ]
            },
            "documentation": {
              "id": 2119,
              "nodeType": "StructuredDocumentation",
              "src": "1603:298:3",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 2135,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1932:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "1918:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1953:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "1939:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1917:44:3"
            },
            "returnParameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1962:0:3"
            },
            "scope": 2636,
            "src": "1906:113:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2968
            ],
            "body": {
              "id": 2144,
              "nodeType": "Block",
              "src": "2153:29:3",
              "statements": [
                {
                  "expression": {
                    "id": 2142,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2116,
                    "src": "2170:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2141,
                  "id": 2143,
                  "nodeType": "Return",
                  "src": "2163:12:3"
                }
              ]
            },
            "documentation": {
              "id": 2136,
              "nodeType": "StructuredDocumentation",
              "src": "2025:54:3",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 2145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2093:4:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2120:8:3"
            },
            "parameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:2:3"
            },
            "returnParameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2145,
                  "src": "2138:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:15:3"
            },
            "scope": 2636,
            "src": "2084:98:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2974
            ],
            "body": {
              "id": 2154,
              "nodeType": "Block",
              "src": "2366:31:3",
              "statements": [
                {
                  "expression": {
                    "id": 2152,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2118,
                    "src": "2383:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2151,
                  "id": 2153,
                  "nodeType": "Return",
                  "src": "2376:14:3"
                }
              ]
            },
            "documentation": {
              "id": 2146,
              "nodeType": "StructuredDocumentation",
              "src": "2188:102:3",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 2155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2304:6:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2148,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2333:8:3"
            },
            "parameters": {
              "id": 2147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:2:3"
            },
            "returnParameters": {
              "id": 2151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2155,
                  "src": "2351:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:15:3"
            },
            "scope": 2636,
            "src": "2295:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2980
            ],
            "body": {
              "id": 2164,
              "nodeType": "Block",
              "src": "3086:26:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3103:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 2161,
                  "id": 2163,
                  "nodeType": "Return",
                  "src": "3096:9:3"
                }
              ]
            },
            "documentation": {
              "id": 2156,
              "nodeType": "StructuredDocumentation",
              "src": "2403:613:3",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 2165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3030:8:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2158,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3061:8:3"
            },
            "parameters": {
              "id": 2157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:2:3"
            },
            "returnParameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2160,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2165,
                  "src": "3079:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2159,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:7:3"
            },
            "scope": 2636,
            "src": "3021:91:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1975
            ],
            "body": {
              "id": 2174,
              "nodeType": "Block",
              "src": "3242:36:3",
              "statements": [
                {
                  "expression": {
                    "id": 2172,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2114,
                    "src": "3259:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2171,
                  "id": 2173,
                  "nodeType": "Return",
                  "src": "3252:19:3"
                }
              ]
            },
            "documentation": {
              "id": 2166,
              "nodeType": "StructuredDocumentation",
              "src": "3118:49:3",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 2175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3181:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2168,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3215:8:3"
            },
            "parameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3192:2:3"
            },
            "returnParameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2175,
                  "src": "3233:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3232:9:3"
            },
            "scope": 2636,
            "src": "3172:106:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1983
            ],
            "body": {
              "id": 2188,
              "nodeType": "Block",
              "src": "3419:42:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2184,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "3436:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2186,
                    "indexExpression": {
                      "id": 2185,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2178,
                      "src": "3446:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3436:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2183,
                  "id": 2187,
                  "nodeType": "Return",
                  "src": "3429:25:3"
                }
              ]
            },
            "documentation": {
              "id": 2176,
              "nodeType": "StructuredDocumentation",
              "src": "3284:47:3",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3345:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3392:8:3"
            },
            "parameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2178,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3363:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "3355:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3354:17:3"
            },
            "returnParameters": {
              "id": 2183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "3410:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3409:9:3"
            },
            "scope": 2636,
            "src": "3336:125:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1993
            ],
            "body": {
              "id": 2209,
              "nodeType": "Block",
              "src": "3756:80:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2201,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2937,
                          "src": "3776:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3776:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2203,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2192,
                        "src": "3790:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2204,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2194,
                        "src": "3801:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2200,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2440,
                      "src": "3766:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3766:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2206,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:42:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3825:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2199,
                  "id": 2208,
                  "nodeType": "Return",
                  "src": "3818:11:3"
                }
              ]
            },
            "documentation": {
              "id": 2190,
              "nodeType": "StructuredDocumentation",
              "src": "3467:192:3",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 2210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3673:8:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2196,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3732:8:3"
            },
            "parameters": {
              "id": 2195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2192,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3690:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "3682:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2194,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3709:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "3701:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3681:35:3"
            },
            "returnParameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "3750:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2197,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3750:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3749:6:3"
            },
            "scope": 2636,
            "src": "3664:172:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2003
            ],
            "body": {
              "id": 2227,
              "nodeType": "Block",
              "src": "3992:51:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2221,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "4009:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2223,
                      "indexExpression": {
                        "id": 2222,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "4021:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4009:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2225,
                    "indexExpression": {
                      "id": 2224,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2215,
                      "src": "4028:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4009:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2220,
                  "id": 2226,
                  "nodeType": "Return",
                  "src": "4002:34:3"
                }
              ]
            },
            "documentation": {
              "id": 2211,
              "nodeType": "StructuredDocumentation",
              "src": "3842:47:3",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 2228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3903:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2217,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3965:8:3"
            },
            "parameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2213,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3921:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2228,
                  "src": "3913:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2215,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3936:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2228,
                  "src": "3928:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3928:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3912:32:3"
            },
            "returnParameters": {
              "id": 2220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2228,
                  "src": "3983:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3982:9:3"
            },
            "scope": 2636,
            "src": "3894:149:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2013
            ],
            "body": {
              "id": 2248,
              "nodeType": "Block",
              "src": "4270:77:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2240,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2937,
                          "src": "4289:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4289:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2242,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2231,
                        "src": "4303:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "4312:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2239,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2613,
                      "src": "4280:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:39:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4336:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2238,
                  "id": 2247,
                  "nodeType": "Return",
                  "src": "4329:11:3"
                }
              ]
            },
            "documentation": {
              "id": 2229,
              "nodeType": "StructuredDocumentation",
              "src": "4049:127:3",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 2249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4190:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2235,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4246:8:3"
            },
            "parameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2231,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4206:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "4198:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4198:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2233,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4223:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "4215:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4197:33:3"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "4264:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:6:3"
            },
            "scope": 2636,
            "src": "4181:166:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2025
            ],
            "body": {
              "id": 2296,
              "nodeType": "Block",
              "src": "4956:336:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2263,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2252,
                        "src": "4976:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2264,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "4984:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2265,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2256,
                        "src": "4995:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2262,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2440,
                      "src": "4966:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2267,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:36:3"
                },
                {
                  "assignments": [
                    2269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2269,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5021:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2296,
                      "src": "5013:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5013:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2276,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2270,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "5040:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2272,
                      "indexExpression": {
                        "id": 2271,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2252,
                        "src": "5052:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5040:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2275,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2273,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2937,
                        "src": "5060:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5060:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5040:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5013:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2278,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2269,
                          "src": "5091:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2279,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2256,
                          "src": "5111:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5091:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5119:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 2277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5083:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5083:79:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:79:3"
                },
                {
                  "id": 2293,
                  "nodeType": "UncheckedBlock",
                  "src": "5172:92:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2285,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "5205:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2286,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2937,
                              "src": "5213:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5213:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2288,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2269,
                              "src": "5227:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2289,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2256,
                              "src": "5246:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5227:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2284,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2613,
                          "src": "5196:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5196:57:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2292,
                      "nodeType": "ExpressionStatement",
                      "src": "5196:57:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5281:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2261,
                  "id": 2295,
                  "nodeType": "Return",
                  "src": "5274:11:3"
                }
              ]
            },
            "documentation": {
              "id": 2250,
              "nodeType": "StructuredDocumentation",
              "src": "4353:456:3",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 2297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4823:12:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2258,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4932:8:3"
            },
            "parameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4853:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "4845:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4845:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4877:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "4869:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4869:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2256,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4904:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "4896:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4835:81:3"
            },
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "4950:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4950:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4949:6:3"
            },
            "scope": 2636,
            "src": "4814:478:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2323,
              "nodeType": "Block",
              "src": "5781:118:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2308,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2937,
                          "src": "5800:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5800:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2310,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2300,
                        "src": "5814:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2311,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "5823:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 2314,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2312,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2937,
                                "src": "5835:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5835:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5823:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2316,
                          "indexExpression": {
                            "id": 2315,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2300,
                            "src": "5849:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5823:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2317,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "5860:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5823:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2307,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2613,
                      "src": "5791:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5791:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2320,
                  "nodeType": "ExpressionStatement",
                  "src": "5791:80:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5888:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2306,
                  "id": 2322,
                  "nodeType": "Return",
                  "src": "5881:11:3"
                }
              ]
            },
            "documentation": {
              "id": 2298,
              "nodeType": "StructuredDocumentation",
              "src": "5298:384:3",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 2324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5696:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2300,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5722:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2324,
                  "src": "5714:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2302,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5739:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2324,
                  "src": "5731:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5731:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5713:37:3"
            },
            "returnParameters": {
              "id": 2306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2324,
                  "src": "5775:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5775:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5774:6:3"
            },
            "scope": 2636,
            "src": "5687:212:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2362,
              "nodeType": "Block",
              "src": "6485:306:3",
              "statements": [
                {
                  "assignments": [
                    2335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2335,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6503:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2362,
                      "src": "6495:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6495:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2342,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2336,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "6522:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2339,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2337,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2937,
                          "src": "6534:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6534:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6522:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2341,
                    "indexExpression": {
                      "id": 2340,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2327,
                      "src": "6548:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6522:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6495:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2344,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2335,
                          "src": "6574:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2345,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2329,
                          "src": "6594:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6574:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6611:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 2343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6566:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6566:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2349,
                  "nodeType": "ExpressionStatement",
                  "src": "6566:85:3"
                },
                {
                  "id": 2359,
                  "nodeType": "UncheckedBlock",
                  "src": "6661:102:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2351,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2937,
                              "src": "6694:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6694:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2353,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2327,
                            "src": "6708:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2354,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2335,
                              "src": "6717:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2355,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2329,
                              "src": "6736:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6717:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2350,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2613,
                          "src": "6685:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6685:67:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2358,
                      "nodeType": "ExpressionStatement",
                      "src": "6685:67:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6780:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2333,
                  "id": 2361,
                  "nodeType": "Return",
                  "src": "6773:11:3"
                }
              ]
            },
            "documentation": {
              "id": 2325,
              "nodeType": "StructuredDocumentation",
              "src": "5905:476:3",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 2363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6395:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2327,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6421:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "6413:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6413:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6438:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "6430:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6430:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6412:42:3"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "6479:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6478:6:3"
            },
            "scope": 2636,
            "src": "6386:405:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2439,
              "nodeType": "Block",
              "src": "7382:596:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2374,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2366,
                          "src": "7400:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7418:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7410:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2375,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7410:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7410:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7400:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7422:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7392:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7392:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2382,
                  "nodeType": "ExpressionStatement",
                  "src": "7392:70:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2384,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2368,
                          "src": "7480:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7501:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7493:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2385,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7493:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7493:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7480:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7505:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7472:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2392,
                  "nodeType": "ExpressionStatement",
                  "src": "7472:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2394,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "7575:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2395,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "7583:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2396,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "7594:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2393,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2624,
                      "src": "7554:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7554:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2398,
                  "nodeType": "ExpressionStatement",
                  "src": "7554:47:3"
                },
                {
                  "assignments": [
                    2400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2400,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7620:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2439,
                      "src": "7612:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7612:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2404,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2401,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "7636:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2403,
                    "indexExpression": {
                      "id": 2402,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2366,
                      "src": "7646:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7636:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7612:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2406,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2400,
                          "src": "7671:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2407,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2370,
                          "src": "7688:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7671:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7696:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 2405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7663:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7663:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2411,
                  "nodeType": "ExpressionStatement",
                  "src": "7663:74:3"
                },
                {
                  "id": 2420,
                  "nodeType": "UncheckedBlock",
                  "src": "7747:77:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2412,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2106,
                            "src": "7771:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2414,
                          "indexExpression": {
                            "id": 2413,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2366,
                            "src": "7781:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7771:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2415,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "7791:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2416,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2370,
                            "src": "7807:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7791:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7771:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2419,
                      "nodeType": "ExpressionStatement",
                      "src": "7771:42:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2421,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "7833:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2423,
                      "indexExpression": {
                        "id": 2422,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "7843:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7833:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2424,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2370,
                      "src": "7857:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7833:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2426,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:30:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2428,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "7888:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2429,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "7896:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2430,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "7907:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2427,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "7879:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2432,
                  "nodeType": "EmitStatement",
                  "src": "7874:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2434,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "7945:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2435,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "7953:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2436,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "7964:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2433,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2635,
                      "src": "7925:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "7925:46:3"
                }
              ]
            },
            "documentation": {
              "id": 2364,
              "nodeType": "StructuredDocumentation",
              "src": "6797:463:3",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 2440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7274:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2366,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7301:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
                  "src": "7293:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2368,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7325:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
                  "src": "7317:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7317:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7352:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
                  "src": "7344:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7344:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7283:81:3"
            },
            "returnParameters": {
              "id": 2372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7382:0:3"
            },
            "scope": 2636,
            "src": "7265:713:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2495,
              "nodeType": "Block",
              "src": "8319:324:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2449,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2443,
                          "src": "8337:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8356:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8348:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2450,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8348:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8348:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8337:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8360:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8329:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8329:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2457,
                  "nodeType": "ExpressionStatement",
                  "src": "8329:65:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8434:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8426:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8426:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8426:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2463,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "8438:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2464,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "8447:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2458,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2624,
                      "src": "8405:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8405:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2466,
                  "nodeType": "ExpressionStatement",
                  "src": "8405:49:3"
                },
                {
                  "expression": {
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2467,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2114,
                      "src": "8465:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2468,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2445,
                      "src": "8481:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8465:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2470,
                  "nodeType": "ExpressionStatement",
                  "src": "8465:22:3"
                },
                {
                  "expression": {
                    "id": 2475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2471,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "8497:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2473,
                      "indexExpression": {
                        "id": 2472,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "8507:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8497:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2474,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2445,
                      "src": "8519:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8497:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2476,
                  "nodeType": "ExpressionStatement",
                  "src": "8497:28:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8557:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8549:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8549:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8549:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2482,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "8561:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2483,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "8570:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2477,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "8540:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8540:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2485,
                  "nodeType": "EmitStatement",
                  "src": "8535:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8616:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8608:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2487,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8608:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8608:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2491,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "8620:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2492,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "8629:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2486,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2635,
                      "src": "8588:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2494,
                  "nodeType": "ExpressionStatement",
                  "src": "8588:48:3"
                }
              ]
            },
            "documentation": {
              "id": 2441,
              "nodeType": "StructuredDocumentation",
              "src": "7984:265:3",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 2496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8263:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2443,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8277:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "8269:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8269:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8294:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "8286:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8286:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8268:33:3"
            },
            "returnParameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8319:0:3"
            },
            "scope": 2636,
            "src": "8254:389:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2567,
              "nodeType": "Block",
              "src": "9028:511:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2505,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2499,
                          "src": "9046:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9065:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9057:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2506,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9057:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9057:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9046:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9069:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 2504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9038:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9038:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2513,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2515,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "9137:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9154:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9146:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2516,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9146:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9146:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2520,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "9158:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2514,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2624,
                      "src": "9116:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9116:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2522,
                  "nodeType": "ExpressionStatement",
                  "src": "9116:49:3"
                },
                {
                  "assignments": [
                    2524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2524,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9184:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2567,
                      "src": "9176:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2523,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9176:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2528,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2525,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "9201:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2527,
                    "indexExpression": {
                      "id": 2526,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2499,
                      "src": "9211:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9201:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9176:43:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2530,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2524,
                          "src": "9237:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2531,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2501,
                          "src": "9255:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9237:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 2533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9263:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 2529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9229:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9229:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2535,
                  "nodeType": "ExpressionStatement",
                  "src": "9229:71:3"
                },
                {
                  "id": 2544,
                  "nodeType": "UncheckedBlock",
                  "src": "9310:79:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2536,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2106,
                            "src": "9334:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2538,
                          "indexExpression": {
                            "id": 2537,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2499,
                            "src": "9344:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9334:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2539,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2524,
                            "src": "9355:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2540,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2501,
                            "src": "9372:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9355:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9334:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2543,
                      "nodeType": "ExpressionStatement",
                      "src": "9334:44:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2545,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2114,
                      "src": "9398:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2546,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "9414:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9398:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2548,
                  "nodeType": "ExpressionStatement",
                  "src": "9398:22:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2550,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "9445:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9462:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9454:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9454:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9454:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2555,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "9466:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2549,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "9436:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2557,
                  "nodeType": "EmitStatement",
                  "src": "9431:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2559,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "9504:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9521:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9513:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9513:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9513:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2564,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "9525:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2558,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2635,
                      "src": "9484:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9484:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "9484:48:3"
                }
              ]
            },
            "documentation": {
              "id": 2497,
              "nodeType": "StructuredDocumentation",
              "src": "8649:309:3",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 2568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8972:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8986:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2568,
                  "src": "8978:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8978:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9003:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2568,
                  "src": "8995:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8995:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8977:33:3"
            },
            "returnParameters": {
              "id": 2503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9028:0:3"
            },
            "scope": 2636,
            "src": "8963:576:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "10075:257:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2579,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2571,
                          "src": "10093:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10110:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10102:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2580,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10102:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10102:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10093:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 2585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10114:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 2578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10085:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10085:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2587,
                  "nodeType": "ExpressionStatement",
                  "src": "10085:68:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2589,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2573,
                          "src": "10171:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10190:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10182:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2590,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10182:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10182:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10171:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10194:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 2588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10163:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10163:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2597,
                  "nodeType": "ExpressionStatement",
                  "src": "10163:68:3"
                },
                {
                  "expression": {
                    "id": 2604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2598,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2112,
                          "src": "10242:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2601,
                        "indexExpression": {
                          "id": 2599,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2571,
                          "src": "10254:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10242:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2602,
                      "indexExpression": {
                        "id": 2600,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2573,
                        "src": "10261:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10242:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2603,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2575,
                      "src": "10272:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10242:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2605,
                  "nodeType": "ExpressionStatement",
                  "src": "10242:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2607,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "10302:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2608,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2573,
                        "src": "10309:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2609,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2575,
                        "src": "10318:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2606,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "10293:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10293:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2611,
                  "nodeType": "EmitStatement",
                  "src": "10288:37:3"
                }
              ]
            },
            "documentation": {
              "id": 2569,
              "nodeType": "StructuredDocumentation",
              "src": "9545:412:3",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 2613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9971:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2571,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9997:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "9989:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9989:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2573,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10020:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "10012:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10012:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2575,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10045:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "10037:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10037:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9979:78:3"
            },
            "returnParameters": {
              "id": 2577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10075:0:3"
            },
            "scope": 2636,
            "src": "9962:370:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2623,
              "nodeType": "Block",
              "src": "11035:2:3",
              "statements": []
            },
            "documentation": {
              "id": 2614,
              "nodeType": "StructuredDocumentation",
              "src": "10338:573:3",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10925:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2616,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10963:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "10955:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10955:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2618,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10985:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "10977:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10977:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2620,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11005:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "10997:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10997:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10945:72:3"
            },
            "returnParameters": {
              "id": 2622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11035:0:3"
            },
            "scope": 2636,
            "src": "10916:121:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2634,
              "nodeType": "Block",
              "src": "11743:2:3",
              "statements": []
            },
            "documentation": {
              "id": 2625,
              "nodeType": "StructuredDocumentation",
              "src": "11043:577:3",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "11634:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2627,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11671:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "11663:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11663:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2629,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11693:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "11685:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11685:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11713:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "11705:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11705:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11653:72:3"
            },
            "returnParameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11743:0:3"
            },
            "scope": 2636,
            "src": "11625:120:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2637,
        "src": "1331:10416:3",
        "usedErrors": []
      }
    ],
    "src": "33:11715:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000bac38038062000bac83398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108b880620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610702565b60405180910390f35b6100df6100da36600461076c565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610796565b61026f565b604051601281526020016100c3565b6100df61013136600461076c565b61031e565b6100f36101443660046107d2565b6001600160a01b031660009081526020819052604090205490565b6100b661035a565b6100df61017536600461076c565b610369565b6100df61018836600461076c565b610402565b6100f361019b3660046107f4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610827565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610827565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040f565b5060015b92915050565b600061027c848484610533565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610313853385840361040f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610355908690610861565b61040f565b6060600480546101d590610827565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103f8338585840361040f565b5060019392505050565b6000610265338484610533565b6001600160a01b0383166104715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105975760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105f95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a8908490610861565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f491815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072f57858101830151858201604001528201610713565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076757600080fd5b919050565b6000806040838503121561077f57600080fd5b61078883610750565b946020939093013593505050565b6000806000606084860312156107ab57600080fd5b6107b484610750565b92506107c260208501610750565b9150604084013590509250925092565b6000602082840312156107e457600080fd5b6107ed82610750565b9392505050565b6000806040838503121561080757600080fd5b61081083610750565b915061081e60208401610750565b90509250929050565b600181811c9082168061083b57607f821691505b60208210810361085b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026957634e487b7160e01b600052601160045260246000fdfea2646970667358221220b42a3f6d63d01e9e3429a937e17ffb00f96792e4c5fefaf762f45f16198f979964736f6c63430008110033",
  "bytecodeSha1": "7e4b46976aab58f4bf915c42e8c0fd3d0e3d896f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "3": {
        "ERC20._approve": {
          "30": [
            10093,
            10112,
            true
          ],
          "31": [
            10171,
            10192,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7400,
            7420,
            true
          ],
          "33": [
            7480,
            7503,
            true
          ],
          "34": [
            7671,
            7694,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6574,
            6609,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            5091,
            5117,
            true
          ]
        }
      },
      "4": {},
      "6": {},
      "7": {}
    },
    "statements": {
      "3": {
        "ERC20._approve": {
          "18": [
            10085,
            10153
          ],
          "19": [
            10163,
            10231
          ],
          "20": [
            10242,
            10278
          ],
          "21": [
            10288,
            10325
          ]
        },
        "ERC20._transfer": {
          "22": [
            7392,
            7462
          ],
          "23": [
            7472,
            7543
          ],
          "24": [
            7663,
            7737
          ],
          "25": [
            7771,
            7813
          ],
          "26": [
            7833,
            7863
          ],
          "27": [
            7874,
            7914
          ]
        },
        "ERC20.allowance": {
          "3": [
            4002,
            4036
          ]
        },
        "ERC20.approve": {
          "5": [
            4280,
            4319
          ],
          "7": [
            4329,
            4340
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3429,
            3454
          ]
        },
        "ERC20.decimals": {
          "1": [
            3096,
            3105
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6566,
            6651
          ],
          "15": [
            6685,
            6752
          ],
          "16": [
            6773,
            6784
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5791,
            5871
          ]
        },
        "ERC20.name": {
          "4": [
            2163,
            2175
          ]
        },
        "ERC20.symbol": {
          "13": [
            2376,
            2390
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3252,
            3271
          ]
        },
        "ERC20.transfer": {
          "17": [
            3766,
            3808
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            4966,
            5002
          ],
          "9": [
            5083,
            5162
          ],
          "10": [
            5196,
            5253
          ],
          "11": [
            5274,
            5285
          ]
        }
      },
      "4": {},
      "6": {},
      "7": {
        "Context._msgSender": {
          "6": [
            659,
            676
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610702565b60405180910390f35b6100df6100da36600461076c565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610796565b61026f565b604051601281526020016100c3565b6100df61013136600461076c565b61031e565b6100f36101443660046107d2565b6001600160a01b031660009081526020819052604090205490565b6100b661035a565b6100df61017536600461076c565b610369565b6100df61018836600461076c565b610402565b6100f361019b3660046107f4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610827565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610827565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040f565b5060015b92915050565b600061027c848484610533565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610313853385840361040f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610355908690610861565b61040f565b6060600480546101d590610827565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103f8338585840361040f565b5060019392505050565b6000610265338484610533565b6001600160a01b0383166104715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105975760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105f95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a8908490610861565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f491815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072f57858101830151858201604001528201610713565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076757600080fd5b919050565b6000806040838503121561077f57600080fd5b61078883610750565b946020939093013593505050565b6000806000606084860312156107ab57600080fd5b6107b484610750565b92506107c260208501610750565b9150604084013590509250925092565b6000602082840312156107e457600080fd5b6107ed82610750565b9392505050565b6000806040838503121561080757600080fd5b61081083610750565b915061081e60208401610750565b90509250929050565b600181811c9082168061083b57607f821691505b60208210810361085b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026957634e487b7160e01b600052601160045260246000fdfea2646970667358221220b42a3f6d63d01e9e3429a937e17ffb00f96792e4c5fefaf762f45f16198f979964736f6c63430008110033",
  "deployedSourceMap": "1331:10416:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:19;;1162:22;1144:41;;1132:2;1117:18;4181:166:3;1004:187:19;3172:106:3;3259:12;;3172:106;;;1342:25:19;;;1330:2;1315:18;3172:106:3;1196:177:19;4814:478:3;;;;;;:::i;:::-;;:::i;3021:91::-;;;3103:2;1853:36:19;;1841:2;1826:18;3021:91:3;1711:184:19;5687:212:3;;;;;;:::i;:::-;;:::i;3336:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:3;3410:7;3436:18;;;;;;;;;;;;3336:125;2295:102;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;3894:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:3;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;2084:98;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:7;4303:7:3;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:3;4181:166;;;;;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:3;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:7;5040:33:3;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:3;;2943:2:19;5083:79:3;;;2925:21:19;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:19;;;3065:38;3120:19;;5083:79:3;;;;;;;;;5196:57;5205:6;666:10:7;5246:6:3;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:3;;4814:478;-1:-1:-1;;;;4814:478:3:o;5687:212::-;666:10:7;5775:4:3;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:3;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;2295:102::-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:7;6479:4:3;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:3;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:3;;3579:2:19;6566:85:3;;;3561:21:19;3618:2;3598:18;;;3591:30;3657:34;3637:18;;;3630:62;-1:-1:-1;;;3708:18:19;;;3701:35;3753:19;;6566:85:3;3377:401:19;6566:85:3;6685:67;666:10:7;6708:7:3;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:3;;6386:405;-1:-1:-1;;;6386:405:3:o;3664:172::-;3750:4;3766:42;666:10:7;3790:9:3;3801:6;3766:9;:42::i;9962:370::-;-1:-1:-1;;;;;10093:19:3;;10085:68;;;;-1:-1:-1;;;10085:68:3;;3985:2:19;10085:68:3;;;3967:21:19;4024:2;4004:18;;;3997:30;4063:34;4043:18;;;4036:62;-1:-1:-1;;;4114:18:19;;;4107:34;4158:19;;10085:68:3;3783:400:19;10085:68:3;-1:-1:-1;;;;;10171:21:3;;10163:68;;;;-1:-1:-1;;;10163:68:3;;4390:2:19;10163:68:3;;;4372:21:19;4429:2;4409:18;;;4402:30;4468:34;4448:18;;;4441:62;-1:-1:-1;;;4519:18:19;;;4512:32;4561:19;;10163:68:3;4188:398:19;10163:68:3;-1:-1:-1;;;;;10242:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;1342:25:19;;;10293:32:3;;1315:18:19;10293:32:3;;;;;;;9962:370;;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:3;;7392:70;;;;-1:-1:-1;;;7392:70:3;;4793:2:19;7392:70:3;;;4775:21:19;4832:2;4812:18;;;4805:30;4871:34;4851:18;;;4844:62;-1:-1:-1;;;4922:18:19;;;4915:35;4967:19;;7392:70:3;4591:401:19;7392:70:3;-1:-1:-1;;;;;7480:23:3;;7472:71;;;;-1:-1:-1;;;7472:71:3;;5199:2:19;7472:71:3;;;5181:21:19;5238:2;5218:18;;;5211:30;5277:34;5257:18;;;5250:62;-1:-1:-1;;;5328:18:19;;;5321:33;5371:19;;7472:71:3;4997:399:19;7472:71:3;-1:-1:-1;;;;;7636:17:3;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:3;;5603:2:19;7663:74:3;;;5585:21:19;5642:2;5622:18;;;5615:30;5681:34;5661:18;;;5654:62;-1:-1:-1;;;5732:18:19;;;5725:36;5778:19;;7663:74:3;5401:402:19;7663:74:3;-1:-1:-1;;;;;7771:17:3;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:3;7888:6;-1:-1:-1;;;;;7879:35:3;;7907:6;7879:35;;;;1342:25:19;;1330:2;1315:18;;1196:177;7879:35:3;;;;;;;;7382:596;7265:713;;;:::o;14:548:19:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:19;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:19:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:19:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:222::-;3215:9;;;3236:10;;;3233:133;;;3288:10;3283:3;3279:20;3276:1;3269:31;3323:4;3320:1;3313:15;3351:4;3348:1;3341:15",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1331,
    11747
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x35A JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x827 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x827 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x313 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x355 SWAP1 DUP7 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x827 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x3F8 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A8 SWAP1 DUP5 SWAP1 PUSH2 0x861 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x713 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 DUP5 PUSH2 0x750 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C2 PUSH1 0x20 DUP6 ADD PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7ED DUP3 PUSH2 0x750 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x810 DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH2 0x81E PUSH1 0x20 DUP5 ADD PUSH2 0x750 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x83B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x85B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x269 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x2A EXTCODEHASH PUSH14 0x63D01E9E3429A937E17FFB00F967 SWAP3 0xE4 0xC5 INVALID STATICCALL 0xF7 PUSH3 0xF45F16 NOT DUP16 SWAP8 SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "3"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C6"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x702"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "DUP1",
      "path": "3"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SUB",
      "path": "3"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "RETURN",
      "path": "3"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76C"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "3"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "3"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x796"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "3"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26F"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "3"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3103,
        3105
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76C"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31E"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D2"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "3"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "AND",
      "path": "3",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3410,
        3417
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "3"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "3"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "3"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35A"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMP",
      "path": "3"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76C"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "3"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x369"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "3"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76C"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "3"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x402"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "3"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F4"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "3"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP3",
      "path": "3"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "AND",
      "path": "3"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "3"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4020
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "3"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP1",
      "path": "3"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP4",
      "path": "3"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "440": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "441": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "AND",
      "path": "3"
    },
    "444": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "DUP3",
      "path": "3"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "446": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "447": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "448": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "450": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "451": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "452": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "453": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "3"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2138,
        2151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x3"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x827"
    },
    "468": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DIV",
      "path": "3"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MUL",
      "path": "3"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "3"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x201"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x827"
    },
    "512": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "LT",
      "path": "3"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x223"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "3"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DIV",
      "path": "3"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MUL",
      "path": "3"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "3"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "3"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "3"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "GT",
      "path": "3"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x231"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "3"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SUB",
      "path": "3"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "AND",
      "path": "3"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "3"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "3"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "3"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "3"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "3"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "3"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "3"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "3"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "599": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4264,
        4268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x265"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 6
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4310
      ],
      "op": "DUP5",
      "path": "3"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4312,
        4318
      ],
      "op": "DUP5",
      "path": "3"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40F"
    },
    "612": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMP",
      "path": "3"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4336,
        4340
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x1"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "3"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "3"
    },
    "622": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "3"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4950,
        4954
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "626": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x27C"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4976,
        4982
      ],
      "op": "DUP5",
      "path": "3"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4984,
        4993
      ],
      "op": "DUP5",
      "path": "3"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4995,
        5001
      ],
      "op": "DUP5",
      "path": "3"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x533"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMP",
      "path": "3"
    },
    "636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "op": "SUB"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "AND",
      "path": "3"
    },
    "647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5013,
        5037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "3"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "3"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP1",
      "path": "3"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP4",
      "path": "3"
    },
    "663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "664": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "DUP5",
      "path": "3"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 9
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "LT",
      "path": "3"
    },
    "676": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x306"
    },
    "680": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP2",
      "path": "3"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP3",
      "path": "3"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "ADD",
      "path": "3"
    },
    "699": {
      "op": "MSTORE"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "704": {
      "op": "DUP3"
    },
    "705": {
      "op": "ADD"
    },
    "706": {
      "op": "MSTORE"
    },
    "707": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "759": {
      "op": "DUP3"
    },
    "760": {
      "op": "ADD"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP1",
      "path": "3"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SUB",
      "path": "3"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0x313"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5211
      ],
      "op": "DUP6",
      "path": "3"
    },
    "779": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP6",
      "path": "3"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5243
      ],
      "op": "DUP5",
      "path": "3"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5252
      ],
      "op": "SUB",
      "path": "3"
    },
    "783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5204
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40F"
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMP",
      "path": "3"
    },
    "787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x1"
    },
    "791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "3"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "799": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "802": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 12
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "3"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "805": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "807": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "3"
    },
    "811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP1",
      "path": "3"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP4",
      "path": "3"
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "op": "SUB"
    },
    "825": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP8",
      "path": "3"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "AND",
      "path": "3"
    },
    "827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP5",
      "path": "3"
    },
    "828": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP2",
      "path": "3"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x265"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "DUP6",
      "path": "3"
    },
    "842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "843": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x355"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "DUP7",
      "path": "3"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x861"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMP",
      "path": "3"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40F"
    },
    "857": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5791,
        5871
      ],
      "op": "JUMP",
      "path": "3"
    },
    "858": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "859": {
      "fn": "ERC20.symbol",
      "offset": [
        2351,
        2364
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "861": {
      "fn": "ERC20.symbol",
      "offset": [
        2383,
        2390
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x4"
    },
    "863": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "DUP1",
      "path": "3"
    },
    "864": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "865": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D5"
    },
    "868": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "869": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x827"
    },
    "872": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2376,
        2390
      ],
      "op": "JUMP",
      "path": "3"
    },
    "873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "874": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6479,
        6483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "3"
    },
    "879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "3"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP1",
      "path": "3"
    },
    "890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP4",
      "path": "3"
    },
    "891": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "op": "SUB"
    },
    "900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP7",
      "path": "3"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "AND",
      "path": "3"
    },
    "902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP5",
      "path": "3"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP2",
      "path": "3"
    },
    "908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 14
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "LT",
      "path": "3"
    },
    "913": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "914": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EB"
    },
    "917": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "918": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP2",
      "path": "3"
    },
    "929": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "932": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "934": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP3",
      "path": "3"
    },
    "935": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "ADD",
      "path": "3"
    },
    "936": {
      "op": "MSTORE"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "941": {
      "op": "DUP3"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "979": {
      "op": "DUP3"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "993": {
      "op": "DUP3"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD"
    },
    "1002": {
      "op": "JUMP"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 15,
      "value": "0x3F8"
    },
    "1007": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6708,
        6715
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6736,
        6751
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6733
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6751
      ],
      "op": "SUB",
      "path": "3"
    },
    "1012": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6693
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40F"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x1"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1021": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1026": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1027": {
      "fn": "ERC20.transfer",
      "offset": [
        3750,
        3754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1029": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3808
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0x265"
    },
    "1032": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1033": {
      "fn": "ERC20.transfer",
      "offset": [
        3790,
        3799
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1034": {
      "fn": "ERC20.transfer",
      "offset": [
        3801,
        3807
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1035": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x533"
    },
    "1038": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3808
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1039": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 18
    },
    "1049": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "AND",
      "path": "3"
    },
    "1050": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x471"
    },
    "1053": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1054": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1056": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1065": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1070": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1071": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "ADD",
      "path": "3"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1075": {
      "op": "DUP1"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "MSTORE"
    },
    "1079": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1114": {
      "op": "DUP3"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "op": "MSTORE"
    },
    "1117": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1124": {
      "op": "SHL"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1127": {
      "op": "DUP3"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1132": {
      "op": "ADD"
    },
    "1133": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD"
    },
    "1136": {
      "op": "JUMP"
    },
    "1137": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 19
    },
    "1147": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "AND",
      "path": "3"
    },
    "1148": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D2"
    },
    "1151": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1152": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1154": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1163": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1169": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "ADD",
      "path": "3"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1175": {
      "op": "DUP3"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "MSTORE"
    },
    "1178": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1213": {
      "op": "DUP3"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "MSTORE"
    },
    "1216": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1224": {
      "op": "DUP3"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "op": "MSTORE"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD"
    },
    "1233": {
      "op": "JUMP"
    },
    "1234": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "op": "SUB"
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 20
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "AND",
      "path": "3"
    },
    "1246": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1251": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "AND",
      "path": "3"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 21
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1281": {
      "op": "DUP5"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "MSTORE"
    },
    "1284": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1317": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1322": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1323": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SUB",
      "path": "3"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1327": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "3"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "3"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "3"
    },
    "1330": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1331": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "op": "SUB"
    },
    "1340": {
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 22
    },
    "1341": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "AND",
      "path": "3"
    },
    "1342": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x597"
    },
    "1345": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1348": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1357": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1362": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1363": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "ADD",
      "path": "3"
    },
    "1364": {
      "op": "MSTORE"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1369": {
      "op": "DUP3"
    },
    "1370": {
      "op": "ADD"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1407": {
      "op": "DUP3"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "op": "MSTORE"
    },
    "1410": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1421": {
      "op": "DUP3"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD"
    },
    "1430": {
      "op": "JUMP"
    },
    "1431": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 23
    },
    "1441": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "AND",
      "path": "3"
    },
    "1442": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F9"
    },
    "1445": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1448": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1457": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1460": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1462": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1463": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "ADD",
      "path": "3"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1469": {
      "op": "DUP3"
    },
    "1470": {
      "op": "ADD"
    },
    "1471": {
      "op": "MSTORE"
    },
    "1472": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1519": {
      "op": "DUP3"
    },
    "1520": {
      "op": "ADD"
    },
    "1521": {
      "op": "MSTORE"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD"
    },
    "1528": {
      "op": "JUMP"
    },
    "1529": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "op": "SUB"
    },
    "1538": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "AND",
      "path": "3"
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7633
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1544": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1545": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1549": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 24
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "LT",
      "path": "3"
    },
    "1558": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x671"
    },
    "1562": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1565": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1574": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1577": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1579": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1580": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "ADD",
      "path": "3"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1586": {
      "op": "DUP3"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "op": "MSTORE"
    },
    "1589": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1624": {
      "op": "DUP3"
    },
    "1625": {
      "op": "ADD"
    },
    "1626": {
      "op": "MSTORE"
    },
    "1627": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD"
    },
    "1648": {
      "op": "JUMP"
    },
    "1649": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "SUB"
    },
    "1658": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 25
    },
    "1659": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1660": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "AND",
      "path": "3"
    },
    "1661": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1663": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1665": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1666": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1670": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "SUB",
      "path": "3"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 26
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "AND",
      "path": "3"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A8"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x861"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "3"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "3"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "3"
    },
    "1712": {
      "fn": "ERC20._transfer",
      "offset": [
        7896,
        7905
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 27
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "3"
    },
    "1722": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "op": "SUB"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "3"
    },
    "1732": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1765": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1766": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1768": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1769": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F4"
    },
    "1772": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1773": {
      "op": "DUP2"
    },
    "1774": {
      "op": "MSTORE"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1777": {
      "op": "ADD"
    },
    "1778": {
      "op": "SWAP1"
    },
    "1779": {
      "op": "JUMP"
    },
    "1780": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1781": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1783": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1784": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1786": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SUB",
      "path": "3"
    },
    "1787": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1788": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1789": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7978
      ],
      "op": "POP",
      "path": "3"
    },
    "1790": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "3"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "3"
    },
    "1792": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "3"
    },
    "1793": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7265,
        7978
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1794": {
      "op": "JUMPDEST"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1799": {
      "op": "DUP1"
    },
    "1800": {
      "op": "DUP4"
    },
    "1801": {
      "op": "MSTORE"
    },
    "1802": {
      "op": "DUP4"
    },
    "1803": {
      "op": "MLOAD"
    },
    "1804": {
      "op": "DUP1"
    },
    "1805": {
      "op": "DUP3"
    },
    "1806": {
      "op": "DUP6"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "MSTORE"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1811": {
      "op": "JUMPDEST"
    },
    "1812": {
      "op": "DUP2"
    },
    "1813": {
      "op": "DUP2"
    },
    "1814": {
      "op": "LT"
    },
    "1815": {
      "op": "ISZERO"
    },
    "1816": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "1819": {
      "op": "JUMPI"
    },
    "1820": {
      "op": "DUP6"
    },
    "1821": {
      "op": "DUP2"
    },
    "1822": {
      "op": "ADD"
    },
    "1823": {
      "op": "DUP4"
    },
    "1824": {
      "op": "ADD"
    },
    "1825": {
      "op": "MLOAD"
    },
    "1826": {
      "op": "DUP6"
    },
    "1827": {
      "op": "DUP3"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "op": "MSTORE"
    },
    "1833": {
      "op": "DUP3"
    },
    "1834": {
      "op": "ADD"
    },
    "1835": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "1838": {
      "op": "JUMP"
    },
    "1839": {
      "op": "JUMPDEST"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1845": {
      "op": "DUP3"
    },
    "1846": {
      "op": "DUP7"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "ADD"
    },
    "1849": {
      "op": "MSTORE"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1854": {
      "op": "NOT"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1857": {
      "op": "DUP4"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "op": "AND"
    },
    "1860": {
      "op": "DUP6"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "ADD"
    },
    "1863": {
      "op": "SWAP3"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "op": "POP"
    },
    "1867": {
      "op": "SWAP3"
    },
    "1868": {
      "op": "SWAP2"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "jump": "o",
      "op": "JUMP"
    },
    "1872": {
      "op": "JUMPDEST"
    },
    "1873": {
      "op": "DUP1"
    },
    "1874": {
      "op": "CALLDATALOAD"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1881": {
      "op": "SHL"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "op": "DUP2"
    },
    "1884": {
      "op": "AND"
    },
    "1885": {
      "op": "DUP2"
    },
    "1886": {
      "op": "EQ"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x767"
    },
    "1890": {
      "op": "JUMPI"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1893": {
      "op": "DUP1"
    },
    "1894": {
      "op": "REVERT"
    },
    "1895": {
      "op": "JUMPDEST"
    },
    "1896": {
      "op": "SWAP2"
    },
    "1897": {
      "op": "SWAP1"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "jump": "o",
      "op": "JUMP"
    },
    "1900": {
      "op": "JUMPDEST"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1903": {
      "op": "DUP1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1906": {
      "op": "DUP4"
    },
    "1907": {
      "op": "DUP6"
    },
    "1908": {
      "op": "SUB"
    },
    "1909": {
      "op": "SLT"
    },
    "1910": {
      "op": "ISZERO"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x77F"
    },
    "1914": {
      "op": "JUMPI"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1917": {
      "op": "DUP1"
    },
    "1918": {
      "op": "REVERT"
    },
    "1919": {
      "op": "JUMPDEST"
    },
    "1920": {
      "op": "PUSH2",
      "value": "0x788"
    },
    "1923": {
      "op": "DUP4"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "1927": {
      "jump": "i",
      "op": "JUMP"
    },
    "1928": {
      "op": "JUMPDEST"
    },
    "1929": {
      "op": "SWAP5"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1932": {
      "op": "SWAP4"
    },
    "1933": {
      "op": "SWAP1"
    },
    "1934": {
      "op": "SWAP4"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "CALLDATALOAD"
    },
    "1937": {
      "op": "SWAP4"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "jump": "o",
      "op": "JUMP"
    },
    "1942": {
      "op": "JUMPDEST"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1945": {
      "op": "DUP1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1950": {
      "op": "DUP5"
    },
    "1951": {
      "op": "DUP7"
    },
    "1952": {
      "op": "SUB"
    },
    "1953": {
      "op": "SLT"
    },
    "1954": {
      "op": "ISZERO"
    },
    "1955": {
      "op": "PUSH2",
      "value": "0x7AB"
    },
    "1958": {
      "op": "JUMPI"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "DUP1"
    },
    "1962": {
      "op": "REVERT"
    },
    "1963": {
      "op": "JUMPDEST"
    },
    "1964": {
      "op": "PUSH2",
      "value": "0x7B4"
    },
    "1967": {
      "op": "DUP5"
    },
    "1968": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "1971": {
      "jump": "i",
      "op": "JUMP"
    },
    "1972": {
      "op": "JUMPDEST"
    },
    "1973": {
      "op": "SWAP3"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "op": "PUSH2",
      "value": "0x7C2"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1980": {
      "op": "DUP6"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "1985": {
      "jump": "i",
      "op": "JUMP"
    },
    "1986": {
      "op": "JUMPDEST"
    },
    "1987": {
      "op": "SWAP2"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1991": {
      "op": "DUP5"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "op": "CALLDATALOAD"
    },
    "1994": {
      "op": "SWAP1"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "SWAP3"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "op": "SWAP3"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "op": "SWAP3"
    },
    "2001": {
      "jump": "o",
      "op": "JUMP"
    },
    "2002": {
      "op": "JUMPDEST"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "DUP5"
    },
    "2009": {
      "op": "SUB"
    },
    "2010": {
      "op": "SLT"
    },
    "2011": {
      "op": "ISZERO"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "2015": {
      "op": "JUMPI"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "DUP1"
    },
    "2019": {
      "op": "REVERT"
    },
    "2020": {
      "op": "JUMPDEST"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x7ED"
    },
    "2024": {
      "op": "DUP3"
    },
    "2025": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "2028": {
      "jump": "i",
      "op": "JUMP"
    },
    "2029": {
      "op": "JUMPDEST"
    },
    "2030": {
      "op": "SWAP4"
    },
    "2031": {
      "op": "SWAP3"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "op": "POP"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "jump": "o",
      "op": "JUMP"
    },
    "2036": {
      "op": "JUMPDEST"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2039": {
      "op": "DUP1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2042": {
      "op": "DUP4"
    },
    "2043": {
      "op": "DUP6"
    },
    "2044": {
      "op": "SUB"
    },
    "2045": {
      "op": "SLT"
    },
    "2046": {
      "op": "ISZERO"
    },
    "2047": {
      "op": "PUSH2",
      "value": "0x807"
    },
    "2050": {
      "op": "JUMPI"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2053": {
      "op": "DUP1"
    },
    "2054": {
      "op": "REVERT"
    },
    "2055": {
      "op": "JUMPDEST"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x810"
    },
    "2059": {
      "op": "DUP4"
    },
    "2060": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "2063": {
      "jump": "i",
      "op": "JUMP"
    },
    "2064": {
      "op": "JUMPDEST"
    },
    "2065": {
      "op": "SWAP2"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "op": "PUSH2",
      "value": "0x81E"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2072": {
      "op": "DUP5"
    },
    "2073": {
      "op": "ADD"
    },
    "2074": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "2077": {
      "jump": "i",
      "op": "JUMP"
    },
    "2078": {
      "op": "JUMPDEST"
    },
    "2079": {
      "op": "SWAP1"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "SWAP3"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "SWAP3"
    },
    "2084": {
      "op": "SWAP1"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "jump": "o",
      "op": "JUMP"
    },
    "2087": {
      "op": "JUMPDEST"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "DUP2"
    },
    "2091": {
      "op": "DUP2"
    },
    "2092": {
      "op": "SHR"
    },
    "2093": {
      "op": "SWAP1"
    },
    "2094": {
      "op": "DUP3"
    },
    "2095": {
      "op": "AND"
    },
    "2096": {
      "op": "DUP1"
    },
    "2097": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "2100": {
      "op": "JUMPI"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2103": {
      "op": "DUP3"
    },
    "2104": {
      "op": "AND"
    },
    "2105": {
      "op": "SWAP2"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "op": "JUMPDEST"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2110": {
      "op": "DUP3"
    },
    "2111": {
      "op": "LT"
    },
    "2112": {
      "op": "DUP2"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "2117": {
      "op": "JUMPI"
    },
    "2118": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2128": {
      "op": "MSTORE"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2133": {
      "op": "MSTORE"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2138": {
      "op": "REVERT"
    },
    "2139": {
      "op": "JUMPDEST"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "SWAP2"
    },
    "2142": {
      "op": "SWAP1"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "jump": "o",
      "op": "JUMP"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "DUP1"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "DUP1"
    },
    "2150": {
      "op": "DUP3"
    },
    "2151": {
      "op": "GT"
    },
    "2152": {
      "op": "ISZERO"
    },
    "2153": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "2156": {
      "op": "JUMPI"
    },
    "2157": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2164": {
      "op": "SHL"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2172": {
      "op": "MSTORE"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2177": {
      "op": "REVERT"
    }
  },
  "sha1": "8dcf47d054dbef74601cd18742b080c8eb62c60e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1331:10416:3:-:0;;;1906:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1972:5;:13;1980:5;1972;:13;:::i;:::-;-1:-1:-1;1995:7:3;:17;2005:7;1995;:17;:::i;:::-;;1906:113;;1331:10416;;14:127:19;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:19;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:19;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:19:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:19;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:19;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:19;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:19;;;3992:26;3943:89;-1:-1:-1;;2747:1:19;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:19;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:19;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:19;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:19:o;:::-;1331:10416:3;;;;;;",
  "sourcePath": "C:/Users/ansel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}